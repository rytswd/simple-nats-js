---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $.Values.cluster.serviceName }}
  labels:
    app.kubernetes.io/name: {{ $.Values.cluster.serviceName }}
spec:
  replicas: {{ .Values.cluster.replicaCount }}
  serviceName: {{ $.Values.cluster.serviceName }}
  selector:
    matchLabels:
      app.kubernetes.io/name: nats-js

  volumeClaimTemplates:
    - metadata:
        name: nats-js-sts-vol
      spec: 
        accessModes:
          - ReadWriteOnce
        volumeMode: "Filesystem"
        resources:
          requests:
            storage: {{ $.Values.cluster.volumeSpace }}

  template:
    metadata:
      labels:
        app.kubernetes.io/name: nats-js
    spec:
      terminationGracePeriodSeconds: 60
      containers:
        - name: nats
          image: synadia/jsm:nightly
          ports:
            - containerPort: 4222
              name: client
            - containerPort: 4242
              name: jscluster
            - containerPort: 7422
              name: leafnodes
            - containerPort: 6222
              name: cluster
            - containerPort: 8222
              name: monitor
            - containerPort: 7777
              name: metrics
          command:
            - "/bin/sh"
            - "-ec"
          args: 
            - |
              /entrypoint.sh server \
              -c \
              /etc/nats-config/$POD_NAME.conf

          # Required to be able to define an environment variable
          # that refers to other environment variables.  This env var
          # is later used as part of the configuration file.
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CLUSTER_ADVERTISE
              value: $(POD_NAME).{{ $.Values.cluster.serviceName }}.$(POD_NAMESPACE).svc

          volumeMounts:
            - name: config-volume
              mountPath: /etc/nats-config
            - name: pid
              mountPath: /var/run/nats
            - name: nats-js-sts-vol
              mountPath: /data/jetstream

          # Liveness/Readiness probes against the monitoring
          livenessProbe:
            httpGet:
              path: /
              port: 8222
            initialDelaySeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: 8222
            initialDelaySeconds: 10
            timeoutSeconds: 5

          # Gracefully stop NATS Server on pod deletion or image upgrade.
          lifecycle:
            preStop:
              exec:
                # Using the alpine based NATS image, we add an extra sleep that is
                # the same amount as the terminationGracePeriodSeconds to allow
                # the NATS Server to gracefully terminate the client connections.
                #
                command:
                  [
                    "/bin/sh",
                    "-c",
                    "/nats-server -sl=ldm=/var/run/nats/nats.pid && /bin/sleep 60",
                  ]

      # Common volumes for the containers
      volumes:
        - name: config-volume
          configMap:
            name: {{ $.Values.cluster.serviceName }}-config
        - name: pid
          emptyDir: {}

      # Required to be able to HUP signal and apply config reload
      # to the server without restarting the pod.
      shareProcessNamespace: true

      # Ensure each pod gets created in different nodes
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: kubernetes.io/hostname
              labelSelector:
                matchLabels:
                  app.kubernetes.io/name: nats-js
